[{sasl,[{sasl_error_logger,false},{errlog_type,error}]},
 {mime,[]},
 {mix,[{colors,[]}]},
 {decimal,[]},
 {artificery,[]},
 {phoenix,
     [{serve_endpoints,false},
      {filter_parameters,[<<"password">>]},
      {static_compressors,['Elixir.Phoenix.Digester.Gzip']},
      {stacktrace_depth,20},
      {logger,true},
      {json_library,'Elixir.Jason'},
      {plug_init_mode,runtime},
      {gzippable_exts,
          [<<".js">>,<<".map">>,<<".css">>,<<".txt">>,<<".text">>,<<".html">>,
           <<".json">>,<<".svg">>,<<".eot">>,<<".ttf">>]}]},
 {telemetry,[]},
 {gettext,[{default_locale,<<"en">>},{plural_forms,'Elixir.Gettext.Plural'}]},
 {crypto,[{fips_mode,false},{rand_cache_size,896}]},
 {expo,[]},
 {pbkdf2_elixir,[]},
 {ranch,[]},
 {cowlib,[]},
 {telemetry_poller,[]},
 {distillery,[{config_providers,[]}]},
 {kernel,
     [{shell_docs_ansi,auto},
      {logger_level,notice},
      {logger_sasl_compatible,false},
      {connect_all,true},
      {net_ticktime,60},
      {prevent_overlapping_partitions,true},
      {net_tickintensity,4},
      {logger,
          [{handler,default,logger_std_h,
               #{config => #{type => standard_io},
                 formatter =>
                     {logger_formatter,
                         #{legacy_header => true,single_line => false}}}}]}]},
 {phoenix_live_dashboard,[]},
 {public_key,[]},
 {phoenix_view,[]},
 {runtime_tools,[]},
 {cowboy,[]},
 {websock,[]},
 {stdlib,[]},
 {phoenix_live_view,[]},
 {castore,[]},
 {comeonin,[]},
 {phoenix_html,
     [{csrf_token_reader,
          {'Elixir.Plug.CSRFProtection',get_csrf_token_for,[]}}]},
 {ecto,[]},
 {connection,[]},
 {file_system,[]},
 {eex,[]},
 {ssl,[]},
 {phoenix_ecto,[{exclude_ecto_exceptions_from_plug,[]}]},
 {logger,
     [{utc_log,false},
      {translators,[{'Elixir.Logger.Translator',translate}]},
      {discard_threshold_periodic_check,30000},
      {translator_inspect_opts,[]},
      {handle_otp_reports,true},
      {console,[{metadata,[request_id]},{format,<<"[$level] $message\n">>}]},
      {start_options,[]},
      {compile_time_application,nil},
      {handle_sasl_reports,false},
      {backends,[console]},
      {discard_threshold_for_error_logger,500},
      {compile_time_purge_matching,[]},
      {truncate,8096},
      {discard_threshold,500},
      {sync_threshold,20}]},
 {cowboy_telemetry,[]},
 {plug_cowboy,[]},
 {plug,[{validate_header_keys_during_test,true}]},
 {compiler,[]},
 {phoenix_template,[]},
 {elixir,
     [{ansi_enabled,false},
      {ansi_syntax_colors,
          [{atom,cyan},
           {binary,default_color},
           {boolean,magenta},
           {charlist,yellow},
           {list,default_color},
           {map,default_color},
           {nil,magenta},
           {number,yellow},
           {string,green},
           {tuple,default_color}]},
      {dbg_callback,{'Elixir.Macro',dbg,[]}},
      {check_endianness,true},
      {time_zone_database,'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
 {phoenix_live_reload,[]},
 {esbuild,
     [{default,
          [{args,
               [<<"js/app.js">>,<<"--bundle">>,<<"--target=es2017">>,
                <<"--outdir=../priv/static/assets">>,
                <<"--external:/fonts/*">>,<<"--external:/images/*">>]},
           {cd,<<"/home/don/SaltAndLite/assets">>},
           {env,#{<<"NODE_PATH">> => <<"/home/don/SaltAndLite/deps">>}}]},
      {version,<<"0.14.29">>}]},
 {websock_adapter,[]},
 {db_connection,[]},
 {postgrex,[{type_server_reap_after,180000},{json_library,'Elixir.Jason'}]},
 {plug_crypto,[]},
 {ecto_sql,[{postgres_map_type,<<"jsonb">>}]},
 {telemetry_metrics,[]},
 {iex,
     [{colors,[]},
      {alive_prompt,<<"%prefix(%node)%counter>">>},
      {history_size,20},
      {default_prompt,<<"%prefix(%counter)>">>},
      {inspect,[{pretty,true}]}]},
 {phoenix_pubsub,[]},
 {salt,
     [{'Elixir.SaltWeb.Endpoint',
          [{url,[{host,<<"localhost">>}]},
           {render_errors,
               [{view,'Elixir.SaltWeb.ErrorView'},
                {accepts,[<<"html">>,<<"json">>]},
                {layout,false}]},
           {pubsub_server,'Elixir.Salt.PubSub'},
           {live_view,[{signing_salt,<<"+jo4Htpu">>}]},
           {http,[{ip,{127,0,0,1}},{port,4000}]},
           {check_origin,false},
           {code_reloader,true},
           {debug_errors,true},
           {secret_key_base,
               <<"l/xwD0ijxzZxUnr/GB7v8W6lf9SfjDb2SxbnT1KrrZzewfSXxNLvqnCvDsqgBDGp">>},
           {watchers,
               [{esbuild,
                    {'Elixir.Esbuild',install_and_run,
                        [default,[<<"--sourcemap=inline">>,<<"--watch">>]]}}]},
           {live_reload,
               [{patterns,
                    [#{'__struct__' => 'Elixir.Regex',opts => <<>>,
                       re_pattern =>
                           {re_pattern,1,0,0,
                               <<69,82,67,80,166,0,0,0,0,0,0,0,81,0,0,0,255,
                                 255,255,255,255,255,255,255,112,0,47,0,0,0,1,
                                 0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                 0,0,0,0,0,0,0,0,0,0,0,131,0,98,29,112,29,114,
                                 29,105,29,118,29,47,29,115,29,116,29,97,29,
                                 116,29,105,29,99,29,47,85,12,133,0,9,0,1,29,
                                 106,29,115,119,0,9,29,99,29,115,29,115,119,0,
                                 9,29,112,29,110,29,103,119,0,11,29,106,29,
                                 112,29,101,29,103,119,0,9,29,106,29,112,29,
                                 103,119,0,9,29,103,29,105,29,102,119,0,9,29,
                                 115,29,118,29,103,120,0,65,25,120,0,98,0>>},
                       re_version => {<<"8.44 2020-02-12">>,little},
                       source =>
                           <<"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$">>},
                     #{'__struct__' => 'Elixir.Regex',opts => <<>>,
                       re_pattern =>
                           {re_pattern,2,0,0,
                               <<69,82,67,80,143,0,0,0,0,0,0,0,81,0,0,0,255,
                                 255,255,255,255,255,255,255,108,0,120,0,0,0,
                                 2,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                 0,0,0,0,0,0,0,0,0,0,0,0,131,0,75,29,108,29,
                                 105,29,98,29,47,29,115,29,97,29,108,29,116,
                                 29,95,29,119,29,101,29,98,29,47,133,0,13,0,1,
                                 29,108,29,105,29,118,29,101,119,0,13,29,118,
                                 29,105,29,101,29,119,29,115,120,0,26,29,47,
                                 85,12,133,0,9,0,2,29,101,29,120,120,0,9,25,
                                 120,0,75,0>>},
                       re_version => {<<"8.44 2020-02-12">>,little},
                       source => <<"lib/salt_web/(live|views)/.*(ex)$">>},
                     #{'__struct__' => 'Elixir.Regex',opts => <<>>,
                       re_pattern =>
                           {re_pattern,1,0,0,
                               <<69,82,67,80,134,0,0,0,0,0,0,0,81,0,0,0,255,
                                 255,255,255,255,255,255,255,108,0,120,0,0,0,
                                 1,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                 0,0,0,0,0,0,0,0,0,0,0,0,131,0,66,29,108,29,
                                 105,29,98,29,47,29,115,29,97,29,108,29,116,
                                 29,95,29,119,29,101,29,98,29,47,29,116,29,
                                 101,29,109,29,112,29,108,29,97,29,116,29,101,
                                 29,115,29,47,85,12,133,0,11,0,1,29,101,29,
                                 101,29,120,120,0,11,25,120,0,66,0>>},
                       re_version => {<<"8.44 2020-02-12">>,little},
                       source => <<"lib/salt_web/templates/.*(eex)$">>}]}]}]},
      {'Elixir.Salt.Repo',
          [{username,<<"postgres">>},
           {password,<<"postgres">>},
           {hostname,<<"localhost">>},
           {database,<<"salt">>},
           {stacktrace,true},
           {show_sensitive_data_on_connection_error,true},
           {pool_size,10}]},
      {ecto_repos,['Elixir.Salt.Repo']}]},
 {jason,[]},
 {asn1,[]}].
